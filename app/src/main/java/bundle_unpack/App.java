/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package bundle_unpack;
import java.util.ArrayList;
import java.util.Map;


public class App {
    public static void main(String[] args) {

        CfgReader reader = new CfgReader();
        Map<String, Bundle> bundleCalMap = reader.readBundleFormat();
      
        //get order info 
        Order order = reader.readOrder();

        ArrayList<BundleBreakdown> outputBD = placeOrder(order, bundleCalMap);
        
        printOrderResult(order, outputBD);
    }

    public static void printOrderResult(Order order, ArrayList<BundleBreakdown> outputBD){
        //...换成 写 输出 到 文件
        System.out.println("--- Order Info ----");
        for(int i=0; i<order.getItemList().size(); i++){
            OrderItem item = order.getItemList().get(i);
            System.out.println(item.getType() + " " + item.getNum());
        }

        System.out.println("--- Bundle breakdown Info ----");
        for(int i=0; i<outputBD.size(); i++){
            BundleBreakdown tmpBdBreakdown = outputBD.get(i);
            System.out.println(tmpBdBreakdown.getType() + " " + tmpBdBreakdown.getOrderN() + " ~ " + tmpBdBreakdown.getTotalNum() + " :");
            for(int j=0; j< tmpBdBreakdown.getDivArray().length; j++)    {
                System.out.println("\t" + tmpBdBreakdown.getDivArray()[j]);
            }     
        }

    }

    public static ArrayList<BundleBreakdown> placeOrder(Order order, Map<String, Bundle> bundleCalMap) {
        ArrayList<BundleBreakdown> breakdownList = new ArrayList<>();

        for (int i = 0; i < order.getItemList().size(); i++) {
            BundleBreakdown curBreakdown = processOrder(order.getItemList().get(i).getType(), order.getItemList().get(i).getNum(), bundleCalMap);
            breakdownList.add(curBreakdown);
        }

        return breakdownList;
    }
    
    private static BundleBreakdown processOrder(String type, int targetNum, Map<String, Bundle> bundleCalMap) {
        if (targetNum < 1) {
            return null;
        }

        if (bundleCalMap.containsKey(type)) {
            Bundle bundleCal = bundleCalMap.get(type);
            BundleBreakdown ddB = bundleCal.calBreakdown(targetNum);

            return ddB;
        }

        return null;
    }

    
}